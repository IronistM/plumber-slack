{
	"info": {
		"_postman_id": "5d3d4415-5ffb-44ac-908b-643c845e71d9",
		"name": "CS Slack",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customer Status",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "293ba85f-d353-4f9d-a77b-8a0379c3ea87",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "91416131-0c30-47b5-ba0c-4f18932c7471",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"plot_history\", response.attachments[0].image_url)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "X-Slack-Signature",
						"value": "{{SLACK_SIGNATURE}}"
					},
					{
						"key": "X-Slack-Request-Timestamp",
						"value": "{{SLACK_TIMESTAMP}}"
					},
					{
						"key": "user-agent",
						"value": "James - (Postman)"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "T0001",
							"type": "text"
						},
						{
							"key": "team_domain",
							"value": "example",
							"type": "text"
						},
						{
							"key": "enterprise_id",
							"value": "E0001",
							"type": "text"
						},
						{
							"key": "enterprise_name",
							"value": "RStudio",
							"type": "text"
						},
						{
							"key": "channel_name",
							"value": "test",
							"type": "text"
						},
						{
							"key": "user_id",
							"value": "U2147483697",
							"type": "text"
						},
						{
							"key": "user_name",
							"value": "James",
							"type": "text"
						},
						{
							"key": "command",
							"value": "/cs",
							"type": "text"
						},
						{
							"key": "text",
							"value": "status 89",
							"type": "text"
						},
						{
							"key": "response_url",
							"value": "https://hooks.slack.com/commands/1234/5678",
							"type": "text"
						},
						{
							"key": "trigger_id",
							"value": "13345224609.738474920.8088930838d88f008e0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "Customer status request"
			},
			"response": []
		},
		{
			"name": "Plot History",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "User-Agent",
						"value": "James - (Postman)"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{plot_history}}",
					"host": [
						"{{plot_history}}"
					]
				},
				"description": "This is based on an environment variable that is set when POST Customer Status is used. It must be called within 5 seconds of calling Customer Status."
			},
			"response": []
		},
		{
			"name": "Help (Explicit)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "X-Slack-Signature",
						"value": "{{SLACK_SIGNATURE}}"
					},
					{
						"key": "X-Slack-Request-Timestamp",
						"value": "{{SLACK_TIMESTAMP}}"
					},
					{
						"key": "user-agent",
						"value": "James - (Postman)"
					}
				],
				"body": {},
				"url": {
					"raw": "{{base_url}}/help",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"help"
					]
				},
				"description": "Ask for help explicitly (call `/help` endpoint)"
			},
			"response": []
		},
		{
			"name": "Help (Implicit)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "X-Slack-Signature",
						"value": "{{SLACK_SIGNATURE}}"
					},
					{
						"key": "X-Slack-Request-Timestamp",
						"value": "{{SLACK_TIMESTAMP}}"
					},
					{
						"key": "user-agent",
						"value": "James - (Postman)"
					}
				],
				"body": {},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "Call help by not calling any specific endpoint (ie `/`)"
			},
			"response": []
		},
		{
			"name": "Rep",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "X-Slack-Signature",
						"value": "{{SLACK_SIGNATURE}}"
					},
					{
						"key": "X-Slack-Request-Timestamp",
						"value": "{{SLACK_TIMESTAMP}}"
					},
					{
						"key": "user-agent",
						"value": "James - (Postman)"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "T0001",
							"type": "text"
						},
						{
							"key": "team_domain",
							"value": "example",
							"type": "text"
						},
						{
							"key": "enterprise_id",
							"value": "E0001",
							"type": "text"
						},
						{
							"key": "enterprise_name",
							"value": "RStudio",
							"type": "text"
						},
						{
							"key": "channel_name",
							"value": "test",
							"type": "text"
						},
						{
							"key": "user_id",
							"value": "U2147483697",
							"type": "text"
						},
						{
							"key": "user_name",
							"value": "James",
							"type": "text"
						},
						{
							"key": "command",
							"value": "/cs",
							"type": "text"
						},
						{
							"key": "text",
							"value": "rep Marla Nitzsche",
							"type": "text"
						},
						{
							"key": "response_url",
							"value": "https://hooks.slack.com/commands/1234/5678",
							"type": "text"
						},
						{
							"key": "trigger_id",
							"value": "13345224609.738474920.8088930838d88f008e0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "Get summary of rep performance"
			},
			"response": []
		},
		{
			"name": "Region",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4d05572-3cad-4a0c-b110-60dcc5a9c107",
						"exec": [
							"var response = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"plot_region\", response.attachments[0].image_url)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					},
					{
						"key": "X-Slack-Signature",
						"value": "{{SLACK_SIGNATURE}}"
					},
					{
						"key": "X-Slack-Request-Timestamp",
						"value": "{{SLACK_TIMESTAMP}}"
					},
					{
						"key": "user-agent",
						"value": "James - (Postman)"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "team_id",
							"value": "T0001",
							"type": "text"
						},
						{
							"key": "team_domain",
							"value": "example",
							"type": "text"
						},
						{
							"key": "enterprise_id",
							"value": "E0001",
							"type": "text"
						},
						{
							"key": "enterprise_name",
							"value": "RStudio",
							"type": "text"
						},
						{
							"key": "channel_name",
							"value": "test",
							"type": "text"
						},
						{
							"key": "user_id",
							"value": "U2147483697",
							"type": "text"
						},
						{
							"key": "user_name",
							"value": "James",
							"type": "text"
						},
						{
							"key": "command",
							"value": "/cs",
							"type": "text"
						},
						{
							"key": "text",
							"value": "region north",
							"type": "text"
						},
						{
							"key": "response_url",
							"value": "https://hooks.slack.com/commands/1234/5678",
							"type": "text"
						},
						{
							"key": "trigger_id",
							"value": "13345224609.738474920.8088930838d88f008e0",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "Get details about regional sales performance"
			},
			"response": []
		},
		{
			"name": "Plot Region",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/plot/region?region_name=ZkxDwCzsd9hyO%2bihzC5OTvkAFzk%2b945JpNK7dplTFXI8NVg4I1pjtZg%3d",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"plot",
						"region"
					],
					"query": [
						{
							"key": "region_name",
							"value": "ZkxDwCzsd9hyO%2bihzC5OTvkAFzk%2b945JpNK7dplTFXI8NVg4I1pjtZg%3d"
						}
					]
				},
				"description": "This endpoint is set as an environment variable ({{plot_region}}) that is set when POST Region is called. This endpoint must be called within 5 seconds of calling Region."
			},
			"response": []
		},
		{
			"name": "Swagger",
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{base_url}}/swagger.json",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"swagger.json"
					]
				},
				"description": "Get Swagger json"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b4e64d56-f982-439e-8b06-2afe6ac0095e",
				"type": "text/javascript",
				"exec": [
					"// Define function for creating URI string from data object",
					"// Lifted from https://stackoverflow.com/questions/14525178/is-there-any-native-function-to-convert-json-to-url-parameters",
					"function urlfy(obj) {",
					"    return Object",
					"        .keys(obj)",
					"        .map(k => `${encodeURIComponent(k)}=${encodeURIComponent(obj[k])}`)",
					"        .join('&');",
					"}",
					"",
					"// Set timestamp of request",
					"var date = new Date()",
					"var timestamp = date.getTime()",
					"pm.globals.set(\"SLACK_TIMESTAMP\", timestamp);",
					"",
					"// Build rawBody using urlfy",
					"var rawBody = urlfy(request.data)",
					"var baseString = [\"v0\", timestamp, rawBody].join(\":\")",
					"// console.log(baseString)",
					"",
					"// Calculate signature",
					"var signature = [\"v0=\", CryptoJS.HmacSHA256(baseString, pm.globals.get(\"SLACK_SIGNING_SECRET\"))].join('')",
					"//console.log(signature)",
					"",
					"// Set SLACK_SIGNATURE variable",
					"pm.globals.set(\"SLACK_SIGNATURE\", signature)"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5a9e7ca5-fe7a-45f8-852a-fa2db55ff962",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}